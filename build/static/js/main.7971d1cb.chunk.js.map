{"version":3,"sources":["Map.js","Calender.js","TimeList.js","ViewImage.js","Top.js","Login.js","Routing.js","reportWebVitals.js","index.js"],"names":["MapWithPolyline","_ref","Positions","centerPositions","sliderSelectLatLng","React","createElement","LoadScript","async","googleMapsApiKey","GoogleMap","id","mapContainerStyle","height","width","zoom","center","mapOptions","disabledDefaultUI","zoomControl","streetViewControl","mapTypeControl","mapTypeId","Object","keys","length","MarkerF","position","icon","Fragment","Polyline","path","options","strokeColor","strokeOpacity","strokeWeight","Map","_ref2","event_date","Calender","GetTimeList","AccessApi","setTimeDates","setPositions","setSelectedTime","setDatetimes","calendarRef","useRef","dates","setDates","useState","d","Date","startDate","concat","getFullYear","getMonth","endDate","HandleDateClick","useCallback","arg","map","item","date","includes","dateStr","className","FullCalendar","ref","plugins","dayGridPlugin","interactionPlugin","initialView","locale","jaLocale","events","dateClick","datesSet","tempStartDate","start","tempEndDate","end","current","getDate","URL","data","i","push","title","error","GetEvent","contentHeight","TimeList","TimeDates","GetPositions","selectedTime","SelectRadio","e","target","value","time","index","key","type","name","datetime","checked","onChange","ViewImage","datetimes","sliderSelectTime","setSliderSelectedTime","setValue","image","setImage","ShowImage","selectDatetime","imagesFolder","split","imageName","replace","imageURL","CheckImageExists","imagePath","callback","img","Image","src","onload","onerror","exists","useEffect","alt","onClick","openImageInNewTab","window","open","min","max","step","Top","Location","useLocation","Navigate","useNavigate","USERID","state","console","log","setCenterPositions","lat","lng","setSliderSelectedLatLng","tempTimeDates","axios","get","response","status","selectedDate","res","temp","forEach","parseFloat","today","checkedTimeIndex","indexOf","checkedTime","Login","username","setUsername","password","setPassword","placeholder","required","alert","parseInt","Routing","HashRouter","Routes","Route","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"6RAKA,MAAMA,EAAkBC,IAAuD,IAAtD,UAACC,EAAS,gBAAEC,EAAe,mBAAEC,GAAmBH,EACvE,OACEI,IAAAC,cAACC,IAAU,CAACC,OAAK,EAACC,iBAAkB,2CAClCJ,IAAAC,cAACI,IAAS,CACRC,GAAG,QACHC,kBAAmB,CAACC,OAAQ,QAASC,MAAO,QAC5CC,KAAM,GACNC,OAAQb,EACRc,WAAY,CACVC,mBAAmB,EACnBC,aAAa,EACbC,mBAAmB,EACnBC,gBAAgB,GAElBC,UAAU,aAGmC,IAA3CC,OAAOC,KAAKpB,GAAoBqB,OAC9BpB,IAAAC,cAACoB,IAAO,CAACC,SAAUvB,EAAoBwB,KAAK,uDAE5CvB,IAAAC,cAAAD,IAAAwB,SAAA,MAGF3B,EAAUuB,OAAS,EACjBpB,IAAAC,cAACwB,IAAQ,CACPC,KAAM7B,EACN8B,QAAS,CACPC,YAAc,UACdC,cAAgB,EAChBC,aAAe,KAInB9B,IAAAC,cAAAD,IAAAwB,SAAA,SAeGO,MARHC,IAAuD,IAAtD,UAACnC,EAAS,gBAAEC,EAAe,mBAAEC,GAAmBiC,EAC3D,OACEhC,IAAAC,cAAA,WACED,IAAAC,cAACN,EAAe,CAACE,UAAWA,EAAWC,gBAAiBA,EAAiBC,mBAAoBA,M,sCCxCnG,IAAIkC,EAAa,GAwEFC,MAtEEtC,IAA0F,IAAzF,YAACuC,EAAW,UAAEC,EAAS,aAAEC,EAAY,aAAEC,EAAY,gBAAEC,EAAe,aAAEC,GAAa5C,EACnG,MAAM6C,EAAcC,iBAAO,OACpBC,EAAOC,GAAYC,mBAAS,IAC7BC,EAAI,IAAIC,KACRC,EAAYN,iBAAO,GAADO,OAAIH,EAAEI,cAAa,KAAAD,OAAIH,EAAEK,WAAW,EAAC,OACvDC,EAAUV,iBAAO,GAADO,OAAIH,EAAEI,cAAa,KAAAD,OAAIH,EAAEK,WAAW,EAAC,OAuBrDE,EAAkBC,sBAAaC,IACftB,EAAWuB,IAAKC,GAC3BA,EAAKC,MAECC,SAASJ,EAAIK,SAC1BzB,EAAYoB,EAAIK,UAGhBvB,EAAa,IACbC,EAAa,IACbC,EAAgB,IAChBC,EAAa,MAGd,IAOH,OACExC,IAAAC,cAAA,OAAK4D,UAAU,YACb7D,IAAAC,cAAC6D,IAAY,CACXC,IAAKtB,EACLuB,QAAS,CAACC,IAAeC,KACzBC,YAAY,eACZC,OAAQC,IAERC,OAAQ3B,EACR4B,UAAWlB,EACXmB,SAdoBjB,IAtCTpD,WACf,MAAMsE,EAAgBlB,EAAImB,MACpBC,EAAcpB,EAAIqB,IAExB5B,EAAU6B,QAAO,GAAA5B,OAAMwB,EAAcvB,cAAa,KAAAD,OAAIwB,EAActB,WAAa,EAAC,KAAAF,OAAIwB,EAAcK,WACpG1B,EAAQyB,QAAO,GAAA5B,OAAM0B,EAAYzB,cAAa,KAAAD,OAAI0B,EAAYxB,WAAa,EAAC,KAAAF,OAAI0B,EAAYG,WAE5F,MAAMC,EAAG,6DAAA9B,OAAgED,EAAU6B,QAAO,cAAA5B,OAAaG,EAAQyB,SAC/G5C,EAAa,GACb,IACE,MAAM+C,QAAa5C,EAAU2C,GAC7B,IAAK,IAAIE,EAAI,EAAGA,EAAID,EAAK5D,OAAQ6D,IAC/BhD,EAAWiD,KAAK,CAAEC,MAAM,GAADlC,OAAK+B,EAAKC,GAAa,SAAC,gBAAMvB,KAAMsB,EAAKC,GAAS,OAE3ErC,EAASX,GACT,MAAOmD,MAwBTC,CAAS9B,IAcL+B,cAAc,WCpCPC,MAhCE3F,IAA+D,IAA9D,UAAC4F,EAAS,aAAEC,EAAY,aAAEC,EAAY,gBAAEnD,GAAgB3C,EAExE,MAAM+F,EAAeC,IACnBrD,EAAgBqD,EAAEC,OAAOC,OAIzBL,EAAaG,EAAEC,OAAOC,QAGxB,OACE9F,IAAAC,cAAA,OAAK4D,UAAU,YACZ2B,EAAUpE,OAAS,EAChBoE,EAAUhC,IAAI,CAACuC,EAAMC,IACnBhG,IAAAC,cAAA,SAAOgG,IAAKD,GACVhG,IAAAC,cAAA,SACEiG,KAAK,QACLC,KAAK,OACLL,MAAOC,EAAKK,SACZC,QAASX,IAAiBK,EAAKK,SAC/BE,SAAUX,IAEXI,EAAKK,SAAS,eAAEpG,IAAAC,cAAA,aAGrBD,IAAAC,cAAA,SAAG,4DCqDEsG,MA9EG3G,IAA2D,IAA1D,UAAC4G,EAAS,iBAAEC,EAAgB,sBAAEC,GAAsB9G,EAErE,MAAOkG,EAAOa,GAAY9D,mBAAS,IAC5B+D,EAAOC,GAAYhE,mBAAS,kBAe7BiE,EAAYA,CAACC,EAAgBjB,KACjCY,EAAsBK,GACtBJ,EAASb,GACT,MAAMkB,EAAeD,EAAeE,MAAM,KAAK,GACzCC,EAAYH,EAAeI,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAAIA,QAAQ,IAAK,KAC5GC,EAAQ,8DAAAnE,OAAiE+D,EAAY,cAAA/D,OAAaiE,GAjBjFG,EAACC,EAAWC,KACnC,MAAMC,EAAM,IAAIC,MAChBD,EAAIE,IAAMJ,EACVE,EAAIG,OAAS,WACXJ,GAAS,IAEXC,EAAII,QAAU,WACZL,GAAS,KAWXF,CAAiBD,EAAWS,IAExBhB,EADEgB,EACOT,EAEA,qBAiCf,OAbAU,oBAAU,KACLtB,EAAUpF,OAAS,EACpB0F,EAAUN,EAAU,GAAI,IAGxBE,EAAsB,IACtBC,EAAS,GACTE,EAAS,oBAIV,CAACL,IAGFxG,IAAAC,cAAA,OAAK4D,UAAU,aACb7D,IAAAC,cAAA,OAAK4D,UAAU,QAAQ6D,IAAKd,EAAOmB,IAAI,eAAKC,QAtBtBC,KAEX,mBAAVrB,GACDsB,OAAOC,KAAKvB,EAAO,aAmBsD5G,IAAAC,cAAA,WACzED,IAAAC,cAAA,SACEiG,KAAO,QACPrC,UAAY,aACZuE,IAAO,EACPC,IAAO7B,EAAUpF,OAAO,EACxBkH,KAAQ,EACRxC,MAASA,EACTQ,SArCgB/C,IACjBiD,EAAUpF,OAAS,GACpB0F,EAAUN,EAAUjD,EAAIsC,OAAOC,OAAQvC,EAAIsC,OAAOC,UAqClD9F,IAAAC,cAAA,SAAIwG,K,MC4EK8B,MA7IHA,KACV,MAAMC,EAAWC,cACXC,EAAWC,cACXC,EAASJ,EAASK,MACxBC,QAAQC,IAAIH,GACE,OAAXA,GACDF,EAAS,UAKX,MAAO7I,EAAWyC,GAAgBO,mBAAS,KACpC/C,EAAiBkJ,GAAsBnG,mBAAS,CAAEoG,IAAK,YAAaC,IAAK,eACzE1D,EAAWnD,GAAgBQ,mBAAS,KACpC6C,EAAcnD,GAAmBM,mBAAS,KAC1C2D,EAAWhE,GAAgBK,mBAAS,KACpC4D,EAAkBC,GAAyB7D,mBAAS,KACpD9C,EAAoBoJ,GAA2BtG,mBAAS,IAC/D,IAAIuG,EAAgB,GAGpB,MAAMhH,EAAYjC,UAChB,IAEE,aADuBkJ,IAAMC,IAAIvE,IACjBC,KAChB,MAAOI,GAEP,OADA0D,QAAQC,IAAIhE,GACJK,EAAMmE,SAASC,QACrB,KAAK,IAGL,KAAK,IACHV,QAAQC,IAAI,8CACZ,MACF,KAAK,IACHD,QAAQC,IAAI,2CACZ,MACF,QACED,QAAQC,IAAI3D,GAEhB,MAAMA,IAKJjD,EAAchC,UAElB,MAAM4E,EAAG,6DAAA9B,OAAgEwG,GACnEC,QAAYtH,EAAU2C,GAC5BqE,EAAgBM,QACVrH,EAAaqH,IAsErB,OAjCA5B,oBAAU,KACR,WACE,GAAwB,KAArBrB,EAAwB,CACzB,MAAMkD,EAAOlD,EAAiBU,QAAQ,IAAK,KACrCpC,EAAG,sEAAA9B,OAAyE0G,GAC5ED,QAAYtH,EAAU2C,GACzB2E,EAAItI,OAAS,GACdsI,EAAIE,SAAQ,SAAUnG,GACpB,IAAK,IAAIwC,KAAOxC,EACdA,EAAKwC,GAAO4D,WAAWpG,EAAKwC,OAGhCkD,EAAwBO,EAAI,KAG5BP,EAAwB,MAd9B,IAmBC,CAAC1C,IAEJqB,oBAAU,KACR,WACE,MAAMhF,EAAI,IAAIC,KACR+G,EAAK,GAAA7G,OAAMH,EAAEI,cAAa,KAAAD,OAAIH,EAAEK,WAAW,EAAC,KAAAF,OAAIH,EAAEgC,iBAClD3C,EAAY2H,SAEZzH,EAAa+G,IALrB,IAQC,IAGDpJ,IAAAC,cAAA,OAAK4D,UAAU,OACb7D,IAAAC,cAAA,OAAK4D,UAAU,aACb7D,IAAAC,cAAA,UAAI,4BACJD,IAAAC,cAACiC,EAAQ,CAACC,YAAaA,EAAaC,UAAWA,EAAWC,aAAcA,EAAcC,aAAcA,EAAcC,gBAAiBA,EAAiBC,aAAcA,IAClKxC,IAAAC,cAAA,OAAK4D,UAAU,eACb7D,IAAAC,cAAA,WACAD,IAAAC,cAAA,UAAI,4BACJD,IAAAC,cAACsF,EAAQ,CAACC,UAAWA,EAAWC,aA1EnBtF,UACnB,MAAMwJ,EAAOnE,EAAUhC,IAAKC,GACnBA,EAAK2C,UAER2D,EAAmBJ,EAAKK,QAAQC,GACtC,IAAyB,IAAtBF,EAAyB,CAC1B,MAAM/G,EAAY2G,EAAKI,GAAkB5C,QAAQ,IAAK,KACtD,IAAI/D,EAEFA,EADC2G,IAAqBJ,EAAKvI,OAAS,EAC1BuI,EAAKI,EAAmB,GAAG5C,QAAQ,IAAK,KAGxCwC,EAAKI,GAAkB5C,QAAQ,IAAK,KAEhD,MAAMpC,EAAG,4DAAA9B,OAA+DD,EAAS,cAAAC,OAAaG,GAE9F,GAAW,KAAR2B,EAAW,CACZ,MAAM2E,QAAYtH,EAAU2C,GACtB4E,EAAOD,EAAIlG,IAAKC,GACbA,EAAK2C,UAEd5D,EAAamH,GACbD,EAAIE,SAAQ,SAAUnG,GACpB,IAAK,IAAIwC,KAAOxC,EACdA,EAAKwC,GAAO4D,WAAWpG,EAAKwC,OAGhC3D,EAAaoH,GACbV,EAAmBU,EAAI,OA8CuChE,aAAcA,EAAcnD,gBAAiBA,IACzGvC,IAAAC,cAAA,YAEFD,IAAAC,cAAA,OAAK4D,UAAU,gBACb7D,IAAAC,cAAA,UAAI,4BACJD,IAAAC,cAACsG,EAAS,CAACC,UAAWA,EAAWC,iBAAkBA,EAAkBC,sBAAuBA,MAGhG1G,IAAAC,cAAC8B,EAAG,CAAClC,UAAWA,EAAWC,gBAAiBA,EAAiBC,mBAAoBA,MCvExEmK,MAtEDA,KACZ,MAAOC,EAAUC,GAAevH,mBAAS,KAClCwH,EAAUC,GAAezH,mBAAS,IAEnC6F,EAAWC,cAmDjB,OACE3I,IAAAC,cAAA,OAAK4D,UAAU,SACb7D,IAAAC,cAAA,UAAI,gEACJD,IAAAC,cAAA,OAAK4D,UAAU,aACb7D,IAAAC,cAAA,KAAG4D,UAAU,UAAS,kCACtB7D,IAAAC,cAAA,SAAOiG,KAAK,OAAOrC,UAAU,YAAY0G,YAAY,sBAAsBjE,SAAWV,GAAMwE,EAAYxE,EAAEC,OAAOC,OAAQ0E,UAAQ,IACjIxK,IAAAC,cAAA,KAAG4D,UAAU,UAAS,kCACtB7D,IAAAC,cAAA,SAAOiG,KAAK,WAAWrC,UAAU,YAAY0G,YAAY,sBAAsBjE,SAAWV,GAAM0E,EAAY1E,EAAEC,OAAOC,OAAQ0E,UAAQ,IACrIxK,IAAAC,cAAA,WAAKD,IAAAC,cAAA,UAAQ+H,QAjCC7H,UAClB,GAAgB,KAAbgK,EACDM,MAAM,6FAEH,GAAgB,KAAbJ,EACNI,MAAM,4FAEJ,CACF,MAAM1F,EAAG,6DAAA9B,OAAgEkH,EAAQ,cAAAlH,OAAaoH,GACxFX,OAhCQvJ,WAChB,IAEE,aADuBkJ,IAAMC,IAAIvE,IACjBC,KAChB,MAAOI,GAEP,OADA0D,QAAQC,IAAIhE,GACJK,EAAMmE,SAASC,QACrB,KAAK,IAGL,KAAK,IACHV,QAAQC,IAAI,8CACZ,MACF,KAAK,IACHD,QAAQC,IAAI,2CACZ,MACF,QACED,QAAQC,IAAI3D,GAEhB,MAAMA,IAaYhD,CAAU2C,GACjB,UAAR2E,EACDe,MAAM,8CAEQ,gBAARf,EACNe,MAAM,wFAEQ,gBAARf,EACNe,MAAM,sEAGN/B,EAAS,IAAK,CAAEG,MAAQ6B,SAAShB,OAaE7F,UAAU,YAAW,+BCnDjD8G,MAXCA,IAEZ3K,IAAAC,cAAC2K,IAAU,KACT5K,IAAAC,cAAC4K,IAAM,KACL7K,IAAAC,cAAC6K,IAAK,CAACpJ,KAAK,IAAIqJ,UAAWxC,IAC3BvI,IAAAC,cAAC6K,IAAK,CAACpJ,KAAK,QAAQqJ,UAAWb,MCCxBc,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAKvL,IAAkD,IAAjD,OAAEwL,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAAS5L,EACpEwL,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,MCADQ,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH7L,IAAAC,cAACD,IAAM8L,WAAU,KACf9L,IAAAC,cAAC0K,EAAO,QAOZK,M","file":"static/js/main.7971d1cb.chunk.js","sourcesContent":["import React from \"react\";\nimport { LoadScript, GoogleMap, Polyline, MarkerF } from \"@react-google-maps/api\";\n\n\n\nconst MapWithPolyline = ({Positions, centerPositions, sliderSelectLatLng}) => {\n  return (\n    <LoadScript async googleMapsApiKey={\"AIzaSyCjpcBI57XAEzvIqzNBEj4eIpVzRaRe93U\"}>\n      <GoogleMap\n        id=\"myMap\"\n        mapContainerStyle={{height: \"100vh\", width: \"75vw\"}}\n        zoom={22}\n        center={centerPositions}\n        mapOptions={{\n          disabledDefaultUI: true,\n          zoomControl: true,\n          streetViewControl: false,\n          mapTypeControl: false,\n        }}\n        mapTypeId=\"satellite\" // 地図タイプを航空写真に設定\n      >\n        {\n          Object.keys(sliderSelectLatLng).length !== 0 ? (\n            <MarkerF position={sliderSelectLatLng} icon='https://maps.google.com/mapfiles/ms/micons/red.png'/>\n          )\n          : <></>\n        }\n        {\n          Positions.length > 0 ? (\n            <Polyline\n              path={Positions}\n              options={{\n                strokeColor : \"#FFFF00\",\n                strokeOpacity : 1,\n                strokeWeight : 1\n              }}\n            />\n          )\n          : <></>\n        }\n      </GoogleMap>\n    </LoadScript>\n  )\n}\n\nconst Map = ({Positions, centerPositions, sliderSelectLatLng}) => {\n  return (\n    <div>\n      <MapWithPolyline Positions={Positions} centerPositions={centerPositions} sliderSelectLatLng={sliderSelectLatLng}/>\n    </div>\n  )\n};\n\nexport default Map;","// 参考 https://qiita.com/FumioNonaka/items/1810f7e211638988af62\nimport React, {useCallback, useRef, useState} from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\"; // pluginは、あとから\nimport jaLocale from '@fullcalendar/core/locales/ja'; // 日本語ロケール\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport \"./css/Calender.css\"\n\nlet event_date = [];\n\nconst Calender = ({GetTimeList, AccessApi, setTimeDates, setPositions, setSelectedTime, setDatetimes}) => {\n  const calendarRef = useRef(null);\n  const [dates, setDates] = useState([]);\n  const d = new Date();\n  const startDate = useRef(`${d.getFullYear()}-${d.getMonth()+1}-1`);\n  const endDate = useRef(`${d.getFullYear()}-${d.getMonth()+2}-1`);\n\n  const GetEvent = async (arg) => {\n    const tempStartDate = arg.start;\n    const tempEndDate = arg.end;\n\n    startDate.current = `${tempStartDate.getFullYear()}-${tempStartDate.getMonth() + 1}-${tempStartDate.getDate()}`;\n    endDate.current = `${tempEndDate.getFullYear()}-${tempEndDate.getMonth() + 1}-${tempEndDate.getDate()}`;\n\n    const URL = `https://ezaki-lab.cloud/~nict/api/get_date.php?start_date=${startDate.current}&end_date=${endDate.current}`;\n    event_date = [];\n    try {\n      const data = await AccessApi(URL);\n      for (let i = 0; i < data.length; i++) {\n        event_date.push({ title: `${data[i]['data_num']}回分`, date: data[i]['date'] });\n      }\n      setDates(event_date);\n    } catch (error) {\n      // エラーハンドリング\n    }\n  };\n\n  // 日付をクリックした時\n  const HandleDateClick = useCallback((arg) => {\n    const events_date = event_date.map((item) => {\n      return item.date;\n    });\n    if(events_date.includes(arg.dateStr)) {\n      GetTimeList(arg.dateStr);\n    }\n    else{\n      setTimeDates([]);\n      setPositions([]);\n      setSelectedTime('');\n      setDatetimes([]);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // 前後の月に移動した時 https://zenn.dev/takky94/articles/7d10cfc95c77de\n  const HandleDatesClick = (arg) => {\n    GetEvent(arg);\n  }\n\n  return(\n    <div className=\"calendar\">\n      <FullCalendar\n        ref={calendarRef}\n        plugins={[dayGridPlugin, interactionPlugin]}\n        initialView=\"dayGridMonth\" //表示の種類\n        locale={jaLocale} //日本語表記\n        // イベントを表示 forで配列作って入れ込む?\n        events={dates}\n        dateClick={HandleDateClick} //日付押したら\n        datesSet={HandleDatesClick} //月変えたら\n        contentHeight=\"auto\" // 高さを自動調整\n        // dayCellContent={(arg) => {\n          // 日付の表示をカスタマイズ\n          // arg.dayNumberText = arg.dayNumberText.replace('日', ''); // 「日」を削除\n        // }}\n      />\n    </div>\n  )\n}\n\nexport default Calender;","import React from \"react\"\n\nconst TimeList = ({TimeDates, GetPositions, selectedTime, setSelectedTime}) => {\n  // 時間選択\n  const SelectRadio = (e) => {\n    setSelectedTime(e.target.value);\n    // setInterval(() => {\n    //   GetPositions(e.target.value);\n    // }, 1000);\n    GetPositions(e.target.value);\n  }\n\n  return (\n    <div className=\"TimeList\">\n      {TimeDates.length > 0 ? (\n          TimeDates.map((time, index) => (\n            <label key={index}>\n              <input\n                type=\"radio\"\n                name='time'\n                value={time.datetime}\n                checked={selectedTime === time.datetime}\n                onChange={SelectRadio}\n              />\n              {time.datetime}から<br/>\n            </label>))\n        ) : (\n          <p>データがありません</p>\n        )\n      }\n    </div>\n  )\n}\n\nexport default TimeList;","import React, {useState, useEffect} from 'react';\n\nconst ViewImage = ({datetimes, sliderSelectTime, setSliderSelectedTime}) => {\n  // const [sliderSelectTime, setSliderSelectedTime] = useState(''); //選択した時間\n  const [value, setValue] = useState(0); //スライダーの値\n  const [image, setImage] = useState('./no_image.png'); //画像のパス\n\n  // 画像が存在するかの判定\n  const CheckImageExists = (imagePath, callback) => {\n    const img = new Image();\n    img.src = imagePath;\n    img.onload = function() {\n      callback(true); //画像が存在する場合\n    };\n    img.onerror = function() {\n      callback(false); //画像が存在しない場合\n    };\n  }\n\n  // 画像を表示する\n  const ShowImage = (selectDatetime, value) => {\n    setSliderSelectedTime(selectDatetime);\n    setValue(value);\n    const imagesFolder = selectDatetime.split(' ')[0];\n    const imageName = selectDatetime.replace('-', '').replace('-', '').replace(':', '').replace(':', '').replace(' ', '_');\n    const imageURL = `https://ezaki-lab.cloud/~nict/api/getImages.php?foldername=${imagesFolder}&filename=${imageName}`;\n    CheckImageExists(imageURL, (exists) => {\n      if (exists) {\n        setImage(imageURL);\n      } else {\n        setImage('./no_image.png');\n      }\n    });\n  }\n\n  // スライダーを変化させた時\n  const ChangeSlider = (arg) => {\n    if(datetimes.length > 0) {\n      ShowImage(datetimes[arg.target.value], arg.target.value);\n    }\n  }\n\n  // 画像を別のタブで開く関数\n  const openImageInNewTab = () => {\n    // 画像を新しいタブで開く\n    if(image !== './no_image.png'){\n      window.open(image, '_blank');\n    }\n  };\n\n  useEffect(() => {\n    if(datetimes.length > 0) {\n      ShowImage(datetimes[0], 0);\n    }\n    else{\n      setSliderSelectedTime('');\n      setValue(0);\n      setImage('./no_image.png');\n\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [datetimes]);\n\n  return (\n    <div className='ViewImage'>\n      <img className='image' src={image} alt='画像' onClick={openImageInNewTab}/><br/>\n      <input\n        type = 'range'\n        className = 'timeSlider'\n        min = {0}\n        max = {datetimes.length-1}\n        step = {1}\n        value = {value}\n        onChange = {ChangeSlider}\n      />\n      <p>{sliderSelectTime}</p>\n    </div>\n  );\n}\n\nexport default ViewImage;","import React, {useState, useEffect} from 'react';\nimport { useNavigate, useLocation } from \"react-router-dom\"\nimport axios from 'axios';\n\nimport Map from './Map';\nimport Calender from './Calender';\nimport TimeList from './TimeList';\nimport ViewImage from './ViewImage';\nimport './css/App.css';\n\nconst Top = () => {\n  const Location = useLocation();\n  const Navigate = useNavigate();\n  const USERID = Location.state;\n  console.log(USERID);\n  if(USERID === null){\n    Navigate('/Login');\n  }\n\n\n  // DOMに現れるものをuseState，表れないものをuseRefにする（レンダリングするかしないか）\n  const [Positions, setPositions] = useState([]); //緯度経度\n  const [centerPositions, setCenterPositions] = useState({ lat: 34.48520833, lng: 136.8251525}); //中心座標\n  const [TimeDates, setTimeDates] = useState([]); //開始時間時間\n  const [selectedTime, setSelectedTime] = useState(''); //TimeListから選択した時間\n  const [datetimes, setDatetimes] = useState([]); //スライダーに出す時間\n  const [sliderSelectTime, setSliderSelectedTime] = useState(''); //スライダーで選択した時間\n  const [sliderSelectLatLng, setSliderSelectedLatLng] = useState({}); //スライダーで選択した時間の時の緯度経度\n  let tempTimeDates = [];\n\n  // APIからデータ取得\n  const AccessApi = async (URL) => {\n    try {\n      const response = await axios.get(URL);\n      return response.data;\n    } catch (error) {\n      console.log(URL);\n      switch (error.response.status) {\n        case 400:\n          console.log('認証エラーです');\n          break;\n        case 401:\n          console.log('認証エラーです');\n          break;\n        case 404:\n          console.log('URL先がないです');\n          break;\n        default:\n          console.log(error);\n      }\n      throw error;\n    }\n  };\n\n  // 指定日の開始時間を取得\n  const GetTimeList = async (selectedDate) => {\n    // console.log(selectedDate);\n    const URL = `https://ezaki-lab.cloud/~nict/api/get_start_data.php?date=${selectedDate}`;\n    const res = await AccessApi(URL);\n    tempTimeDates = res;\n    await setTimeDates(res);\n  }\n\n  // 指定日の緯度経度を取得\n  const GetPositions = async (checkedTime) => {\n    const temp = TimeDates.map((item) => {\n      return item.datetime;\n    });\n    const checkedTimeIndex = temp.indexOf(checkedTime);\n    if(checkedTimeIndex !== -1) {\n      const startDate = temp[checkedTimeIndex].replace(' ', '_');\n      let endDate;\n      if(checkedTimeIndex !== temp.length - 1) {\n        endDate = temp[checkedTimeIndex + 1].replace(' ', '_');\n      }\n      else{\n        endDate = temp[checkedTimeIndex].replace(' ', '_');\n      }\n      const URL = `https://ezaki-lab.cloud/~nict/api/get_gps.php?start_date=${startDate}&end_date=${endDate}`;\n\n      if(URL !== ''){\n        const res = await AccessApi(URL);\n        const temp = res.map((item) => {\n          return item.datetime;\n        });\n        setDatetimes(temp);\n        res.forEach(function (item) {\n          for (var key in item) {\n            item[key] = parseFloat(item[key]);\n          }\n        });\n        setPositions(res);\n        setCenterPositions(res[0]);\n      }\n    }\n  }\n\n  useEffect(() => {\n    (async() => {\n      if(sliderSelectTime !== ''){\n        const temp = sliderSelectTime.replace(' ', '_');\n        const URL = `https://ezaki-lab.cloud/~nict/api/get_datetime_to_gps.php?datetime=${temp}`;\n        const res = await AccessApi(URL);\n        if(res.length > 0){\n          res.forEach(function (item) {\n            for (var key in item) {\n              item[key] = parseFloat(item[key]);\n            }\n          });\n          setSliderSelectedLatLng(res[0]);\n        }\n        else{\n          setSliderSelectedLatLng({});\n        }\n      }\n\n    })()\n  }, [sliderSelectTime])\n\n  useEffect(() => {\n    (async() => {\n      const d = new Date();\n      const today = `${d.getFullYear()}-${d.getMonth()+1}-${d.getDate()}`\n      await GetTimeList(today);\n      // console.log(tempTimeDates);\n      await setTimeDates(tempTimeDates);\n    })()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"Top\">\n      <div className=\"container\">\n        <h1>日付選択</h1>\n        <Calender GetTimeList={GetTimeList} AccessApi={AccessApi} setTimeDates={setTimeDates} setPositions={setPositions} setSelectedTime={setSelectedTime} setDatetimes={setDatetimes}/>\n        <div className='TimeListDiv'>\n          <hr/>\n          <h1>開始時刻</h1>\n          <TimeList TimeDates={TimeDates} GetPositions={GetPositions} selectedTime={selectedTime} setSelectedTime={setSelectedTime}/>\n          <hr/>\n        </div>\n        <div className='ViewImageDiv'>\n          <h1>撮影画像</h1>\n          <ViewImage datetimes={datetimes} sliderSelectTime={sliderSelectTime} setSliderSelectedTime={setSliderSelectedTime}/>\n        </div>\n      </div>\n      <Map Positions={Positions} centerPositions={centerPositions} sliderSelectLatLng={sliderSelectLatLng}/>\n    </div>\n  );\n}\n\nexport default Top;\n","import React, {useState} from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from 'axios';\n// react-router-domの解説 https://zenn.dev/naoki0722/articles/552258f70f69fa\n\nconst Login = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const Navigate = useNavigate(); // historyを用意する\n\n  // APIからデータ取得\n  const AccessApi = async (URL) => {\n    try {\n      const response = await axios.get(URL);\n      return response.data;\n    } catch (error) {\n      console.log(URL);\n      switch (error.response.status) {\n        case 400:\n          console.log('認証エラーです');\n          break;\n        case 401:\n          console.log('認証エラーです');\n          break;\n        case 404:\n          console.log('URL先がないです');\n          break;\n        default:\n          console.log(error);\n      }\n      throw error;\n    }\n  };\n\n  const handleLogin = async () => {\n    if(username === ''){\n      alert('ユーザー名を入力してください');\n    }\n    else if(password === ''){\n      alert('パスワードを入力してください');\n    }\n    else{\n      const URL = `https://ezaki-lab.cloud/~nict/api/check_user.php?username=${username}&password=${password}`;\n      const res = await AccessApi(URL);\n      if(res === 'error'){\n        alert('ログインエラー');\n      }\n      else if(res === 'no username'){\n        alert('このユーザー名は存在しません');\n      }\n      else if(res === 'no password'){\n        alert('パスワードが異なります');\n      }\n      else {\n        Navigate('/', { state : parseInt(res)});\n      }\n    }\n  }\n\n  return (\n    <div className=\"Login\">\n      <h1>撮影地点可視化サイト</h1>\n      <div className=\"LoginForm\">\n        <p className=\"loginP\">ユーザー名</p>\n        <input type=\"text\" className=\"loginText\" placeholder=\"Enter your username\" onChange={(e) => setUsername(e.target.value)} required/>\n        <p className=\"loginP\">パスワード</p>\n        <input type=\"password\" className=\"loginText\" placeholder=\"Enter your password\" onChange={(e) => setPassword(e.target.value)} required/>\n        <br/><button onClick={handleLogin} className=\"loginBtn\">ログイン</button>\n      </div>\n    </div>\n  )\n}\n\n\nexport default Login;","import React from 'react';\nimport { HashRouter, Route, Routes} from 'react-router-dom';\n\nimport Top from './Top';\nimport Login from './Login';\n\nconst Routing = () => {\n  return (\n    <HashRouter>\n      <Routes>\n        <Route path='/' Component={Top} />\n        <Route path='Login' Component={Login} />\n      </Routes>\n    </HashRouter>\n  )\n}\n\nexport default Routing;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './css/index.css';\n// import App from './App';\nimport Routing from './Routing';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Routing />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
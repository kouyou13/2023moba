{"ast":null,"code":"var _jsxFileName = \"/Users/nobuoezaki/Desktop/ezaki-lab/my-app/src/DateView.js\",\n  _s = $RefreshSig$();\n// 参考 https://qiita.com/FumioNonaka/items/1810f7e211638988af62\nimport React, { useCallback, useState } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\"; // pluginは、あとから\nimport allLocales from '@fullcalendar/core/locales-all';\nimport interactionPlugin, { DateClickArg } from \"@fullcalendar/interaction\";\nimport axios from 'axios';\n// axios.defaults.baseURL = 'http://localhost:3000';\n// axios.defaults.headers.post['Content-Type'] = 'application/json;charset=utf-8';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DateView = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [StartDate, setStartDate] = useState('');\n  const [month, setMonth] = useState('');\n\n  // 日付をクリックした時\n  const handleDateClick = useCallback(arg => {\n    alert(arg.dateStr);\n  }, []);\n\n  // 前後の月に移動した時 https://zenn.dev/takky94/articles/7d10cfc95c77de\n  const handleDatesClick = arg => {\n    const startDate = arg.start;\n    const endDate = arg.end;\n    setYear();\n    console.log(arg.start);\n  };\n\n  // APIからデータを取得\n  const DateURL = \"https://ezaki-lab.littlestar.jp/nict/api/get_date.php?year=2023&month=9\";\n  axios.post(DateURL).then(function (response) {\n    // console.log(response.data);\n    setPosts(response.data);\n  }).catch(function (error) {\n    // console.log(error);\n    switch (error.response.status) {\n      case 400:\n        console.log('認証エラーです');\n        break;\n      case 401:\n        console.log('認証エラーです');\n        break;\n      case 404:\n        console.log('URL先がないです');\n        break;\n      default:\n        console.log(error);\n    }\n  });\n  let event_date = [];\n  for (let i = 0; i < posts.length; i++) {\n    event_date.push({\n      title: \"データあり\",\n      date: `${posts[i]['date']}`\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"date_div\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u65E5\\u4ED8\\u9078\\u629E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, interactionPlugin],\n      initialView: \"dayGridMonth\" //表示の種類\n      ,\n      locales: allLocales //全部を日本語化\n      ,\n      locale: \"ja\" //日本語表記\n      // イベントを表示 forで配列作って入れ込む?\n      ,\n      events: event_date,\n      dateClick: handleDateClick,\n      datesSet: handleDatesClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(DateView, \"8Q+Su64o+pTe7+5YvNkJM/aD//Q=\");\n_c = DateView;\nvar _c;\n$RefreshReg$(_c, \"DateView\");","map":{"version":3,"names":["React","useCallback","useState","FullCalendar","dayGridPlugin","allLocales","interactionPlugin","DateClickArg","axios","jsxDEV","_jsxDEV","DateView","_s","posts","setPosts","StartDate","setStartDate","month","setMonth","handleDateClick","arg","alert","dateStr","handleDatesClick","startDate","start","endDate","end","setYear","console","log","DateURL","post","then","response","data","catch","error","status","event_date","i","length","push","title","date","id","children","fileName","_jsxFileName","lineNumber","columnNumber","plugins","initialView","locales","locale","events","dateClick","datesSet","_c","$RefreshReg$"],"sources":["/Users/nobuoezaki/Desktop/ezaki-lab/my-app/src/DateView.js"],"sourcesContent":["// 参考 https://qiita.com/FumioNonaka/items/1810f7e211638988af62\nimport React, {useCallback, useState} from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\"; // pluginは、あとから\nimport allLocales from '@fullcalendar/core/locales-all';\nimport interactionPlugin, { DateClickArg } from \"@fullcalendar/interaction\";\nimport axios from 'axios';\n// axios.defaults.baseURL = 'http://localhost:3000';\n// axios.defaults.headers.post['Content-Type'] = 'application/json;charset=utf-8';\n\nexport const DateView = () => {\n  const [posts, setPosts] = useState([]);\n  const [StartDate, setStartDate] = useState('');\n  const [month, setMonth] = useState('');\n\n  // 日付をクリックした時\n  const handleDateClick = useCallback((arg) => {\n    alert(arg.dateStr);\n  }, []);\n\n  // 前後の月に移動した時 https://zenn.dev/takky94/articles/7d10cfc95c77de\n  const handleDatesClick = (arg) => {\n    const startDate = arg.start;\n    const endDate = arg.end;\n    setYear()\n    console.log(arg.start);\n\n  }\n\n  // APIからデータを取得\n  const DateURL = \"https://ezaki-lab.littlestar.jp/nict/api/get_date.php?year=2023&month=9\";\n\n  axios.post(DateURL)\n  .then(function (response) {\n    // console.log(response.data);\n    setPosts(response.data);\n  })\n  .catch(function (error) {\n    // console.log(error);\n    switch (error.response.status) {\n      case 400:\n        console.log('認証エラーです');\n        break;\n      case 401:\n        console.log('認証エラーです');\n        break;\n      case 404:\n        console.log('URL先がないです');\n        break;\n      default:\n        console.log(error);\n    }\n  });\n\n  let event_date = [];\n  for(let i = 0; i < posts.length; i++) {\n    event_date.push({title : \"データあり\", date : `${posts[i]['date']}`});\n  }\n  \n\n  return(\n    <div id=\"date_div\">\n      <h1>日付選択</h1>\n      <FullCalendar \n        plugins={[dayGridPlugin, interactionPlugin]} \n        initialView=\"dayGridMonth\" //表示の種類\n        locales={allLocales} //全部を日本語化\n        locale=\"ja\" //日本語表記\n        // イベントを表示 forで配列作って入れ込む?\n        events={event_date}\n        dateClick={handleDateClick}\n        datesSet={handleDatesClick}\n      />\n    </div>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/nobuoezaki/Desktop/ezaki-lab/2023moba/src/Calender.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport allLocales from \"@fullcalendar/core/locales-all\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport \"./css/Calender.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Calender = ({\n  GetTimeList,\n  AccessApi,\n  setTimeDates,\n  setPositions,\n  setSelectedTime\n}) => {\n  _s();\n  const calendarRef = useRef(null);\n  const [dates, setDates] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [todayDate, setTodayDate] = useState(null); // 今日の日付を保持する状態\n  const d = new Date();\n  const startDate = useRef(`${d.getFullYear()}-${d.getMonth() + 1}-1`);\n  const endDate = useRef(`${d.getFullYear()}-${d.getMonth() + 2}-1`);\n  let event_date = [];\n\n  // 今日の日付を設定\n  useEffect(() => {\n    const today = new Date();\n    setTodayDate(`${today.getFullYear()}-${today.getMonth() + 1}-${today.getDate()}`);\n  }, []);\n  const GetEvent = async arg => {\n    const tempStartDate = arg.start;\n    const tempEndDate = arg.end;\n    startDate.current = `${tempStartDate.getFullYear()}-${tempStartDate.getMonth() + 1}-${tempStartDate.getDate()}`;\n    endDate.current = `${tempEndDate.getFullYear()}-${tempEndDate.getMonth() + 1}-${tempEndDate.getDate()}`;\n    const URL = `https://ezaki-lab.littlestar.jp/nict/api/get_date.php?start_date=${startDate.current}&end_date=${endDate.current}`;\n    event_date = [];\n    try {\n      const data = await AccessApi(URL);\n      for (let i = 0; i < data.length; i++) {\n        event_date.push({\n          title: `${data[i][\"data_num\"]}回分`,\n          date: `${data[i][\"date\"]}`\n        });\n      }\n      setDates(event_date);\n    } catch (error) {\n      // エラーハンドリング\n    }\n  };\n  const HandleDateClick = useCallback(arg => {\n    const calendarApi = calendarRef.current.getApi();\n    const selectedDayEl = arg.dayEl;\n\n    // 今日の日付の要素を取得\n    const todayDayEl = calendarApi.getDate().dayEl;\n\n    // 今日の日付の要素を元に戻す\n    if (todayDate && todayDayEl) {\n      todayDayEl.style.backgroundColor = \"\";\n    }\n\n    // 前に選択した日の要素があれば、元の色に戻す\n    if (selectedDate) {\n      const previousSelectedDayEl = calendarApi.getDate().dateEl;\n      previousSelectedDayEl.style.backgroundColor = \"\";\n    }\n    selectedDayEl.style.backgroundColor = \"yellow\";\n    setSelectedDate(selectedDayEl);\n    calendarApi.unselect();\n    const events_date = event_date.map(item => {\n      return item.date;\n    });\n    if (events_date.includes(arg.dateStr)) {\n      GetTimeList(arg.dateStr);\n    } else {\n      setTimeDates([]);\n      setPositions([]);\n      setSelectedTime(\"\");\n    }\n  }, [todayDate, selectedDate]);\n  const HandleDatesClick = arg => {\n    GetEvent(arg);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n      ref: calendarRef,\n      plugins: [dayGridPlugin, interactionPlugin],\n      initialView: \"dayGridMonth\",\n      locales: allLocales,\n      locale: \"ja\",\n      events: dates,\n      dateClick: HandleDateClick,\n      datesSet: HandleDatesClick,\n      contentHeight: \"auto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(Calender, \"h59qFtuB149yQ4b6RZ3I21DJY6k=\");\n_c = Calender;\nvar _c;\n$RefreshReg$(_c, \"Calender\");","map":{"version":3,"names":["React","useCallback","useEffect","useRef","useState","FullCalendar","dayGridPlugin","allLocales","interactionPlugin","jsxDEV","_jsxDEV","Calender","GetTimeList","AccessApi","setTimeDates","setPositions","setSelectedTime","_s","calendarRef","dates","setDates","selectedDate","setSelectedDate","todayDate","setTodayDate","d","Date","startDate","getFullYear","getMonth","endDate","event_date","today","getDate","GetEvent","arg","tempStartDate","start","tempEndDate","end","current","URL","data","i","length","push","title","date","error","HandleDateClick","calendarApi","getApi","selectedDayEl","dayEl","todayDayEl","style","backgroundColor","previousSelectedDayEl","dateEl","unselect","events_date","map","item","includes","dateStr","HandleDatesClick","children","ref","plugins","initialView","locales","locale","events","dateClick","datesSet","contentHeight","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nobuoezaki/Desktop/ezaki-lab/2023moba/src/Calender.js"],"sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport allLocales from \"@fullcalendar/core/locales-all\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport \"./css/Calender.css\";\n\nexport const Calender = ({　GetTimeList,AccessApi,\n  setTimeDates,\n  setPositions,\n  setSelectedTime,\n}) => {\n  const calendarRef = useRef(null);\n  const [dates, setDates] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [todayDate, setTodayDate] = useState(null); // 今日の日付を保持する状態\n  const d = new Date();\n  const startDate = useRef(`${d.getFullYear()}-${d.getMonth() + 1}-1`);\n  const endDate = useRef(`${d.getFullYear()}-${d.getMonth() + 2}-1`);\n  let event_date = [];\n\n  // 今日の日付を設定\n  useEffect(() => {\n    const today = new Date();\n    setTodayDate(\n      `${today.getFullYear()}-${today.getMonth() + 1}-${today.getDate()}`\n    );\n  }, []);\n\n  const GetEvent = async (arg) => {\n    const tempStartDate = arg.start;\n    const tempEndDate = arg.end;\n\n    startDate.current = `${tempStartDate.getFullYear()}-${\n      tempStartDate.getMonth() + 1\n    }-${tempStartDate.getDate()}`;\n    endDate.current = `${tempEndDate.getFullYear()}-${\n      tempEndDate.getMonth() + 1\n    }-${tempEndDate.getDate()}`;\n\n    const URL = `https://ezaki-lab.littlestar.jp/nict/api/get_date.php?start_date=${startDate.current}&end_date=${endDate.current}`;\n\n    event_date = [];\n    try {\n      const data = await AccessApi(URL);\n      for (let i = 0; i < data.length; i++) {\n        event_date.push({\n          title: `${data[i][\"data_num\"]}回分`,\n          date: `${data[i][\"date\"]}`,\n        });\n      }\n      setDates(event_date);\n    } catch (error) {\n      // エラーハンドリング\n    }\n  };\n\n  const HandleDateClick = useCallback((arg) => {\n    const calendarApi = calendarRef.current.getApi();\n    const selectedDayEl = arg.dayEl;\n\n    // 今日の日付の要素を取得\n    const todayDayEl = calendarApi.getDate().dayEl;\n\n    // 今日の日付の要素を元に戻す\n    if (todayDate && todayDayEl) {\n      todayDayEl.style.backgroundColor = \"\";\n    }\n\n    // 前に選択した日の要素があれば、元の色に戻す\n    if (selectedDate) {\n      const previousSelectedDayEl = calendarApi.getDate().dateEl;\n      previousSelectedDayEl.style.backgroundColor = \"\";\n    }\n\n    selectedDayEl.style.backgroundColor = \"yellow\";\n\n    setSelectedDate(selectedDayEl);\n    calendarApi.unselect();\n\n    const events_date = event_date.map((item) => {\n      return item.date;\n    });\n    if (events_date.includes(arg.dateStr)) {\n      GetTimeList(arg.dateStr);\n    } else {\n      setTimeDates([]);\n      setPositions([]);\n      setSelectedTime(\"\");\n    }\n  }, [todayDate, selectedDate]);\n\n  const HandleDatesClick = (arg) => {\n    GetEvent(arg);\n  };\n\n  return (\n    <div>\n      <FullCalendar\n        ref={calendarRef}\n        plugins={[dayGridPlugin, interactionPlugin]}\n        initialView=\"dayGridMonth\"\n        locales={allLocales}\n        locale=\"ja\"\n        events={dates}\n        dateClick={HandleDateClick}\n        datesSet={HandleDatesClick}\n        contentHeight=\"auto\"\n      />\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
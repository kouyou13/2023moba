{"ast":null,"code":"var _jsxFileName = \"/Users/nobuoezaki/Desktop/ezaki-lab/2023moba/src/Calender.js\",\n  _s = $RefreshSig$();\n// 参考 https://qiita.com/FumioNonaka/items/1810f7e211638988af62\nimport React, { useCallback, useState, useEffect, useRef } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\"; // pluginは、あとから\nimport allLocales from '@fullcalendar/core/locales-all';\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport axios from 'axios';\nimport \"./css/Calender.css\";\n// axios.defaults.baseURL = 'http://localhost:3000';\n// axios.defaults.headers.post['Content-Type'] = 'application/json;charset=utf-8';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Calender = ({\n  GetTimeList\n}) => {\n  _s();\n  // DOMに現れるものをuseState，表れないものを\n  const d = new Date();\n  const [events, setEvents] = useState([]);\n  const startDate = useRef(`${d.getFullYear()}-${d.getMonth() + 1}-1`);\n  const endDate = useRef(`${d.getFullYear()}-${d.getMonth() + 2}-1`);\n  const GetEvent = async () => {\n    //非同期関数\n    // APIからデータを取得\n    const URL = `https://ezaki-lab.littlestar.jp/nict/api/get_date.php?start_date=${startDate.current}&end_date=${endDate.current}`;\n    try {\n      const response = await axios.post(URL);\n      let event_date = [];\n      for (let i = 0; i < response.data.length; i++) {\n        event_date.push({\n          title: \"\",\n          date: `${response.data[i]['date']}`\n        });\n      }\n      // events.current = event_date;\n      // console.log(events.current);\n      setEvents(event_date);\n    } catch (error) {\n      // console.error(error);\n      switch (error.response.status) {\n        case 400:\n          console.log('認証エラーです');\n          break;\n        case 401:\n          console.log('認証エラーです');\n          break;\n        case 404:\n          console.log('URL先がないです');\n          break;\n        default:\n          console.log(error);\n      }\n    }\n    ;\n  };\n\n  // 日付をクリックした時\n  const HandleDateClick = useCallback(arg => {\n    const selectDate = arg.dateStr;\n    const events_date = events.current.map(item => {\n      return item.date;\n    });\n    if (events_date.includes(selectDate)) {\n      GetTimeList(arg.dateStr);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // 前後の月に移動した時 https://zenn.dev/takky94/articles/7d10cfc95c77de\n  const HandleDatesClick = arg => {\n    const tempStartDate = arg.start;\n    const tempEndDate = arg.end;\n\n    // setStartDate(`${tempStartDate.getFullYear()}-${tempStartDate.getMonth()+1}-${tempStartDate.getDate()}`);\n    // setEndDate(`${tempEndDate.getFullYear()}-${tempEndDate.getMonth()+1}-${tempEndDate.getDate()}`);\n    startDate.current = `${tempStartDate.getFullYear()}-${tempStartDate.getMonth() + 1}-${tempStartDate.getDate()}`;\n    endDate.current = `${tempEndDate.getFullYear()}-${tempEndDate.getMonth() + 1}-${tempEndDate.getDate()}`;\n    GetEvent();\n  };\n\n  // 第2因数の値に変化があったときに実行\n  useEffect(() => {\n    GetEvent();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"date_div\",\n    className: \"calendar_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u65E5\\u4ED8\\u9078\\u629E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, interactionPlugin],\n      initialView: \"dayGridMonth\" //表示の種類\n      ,\n      locales: allLocales //全部を日本語化\n      ,\n      locale: \"ja\" //日本語表記\n      // イベントを表示 forで配列作って入れ込む?\n      ,\n      events: events,\n      dateClick: HandleDateClick,\n      datesSet: HandleDatesClick,\n      contentHeight: \"auto\" // 高さを自動調整\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(Calender, \"0722yIMmYU2z6ItEUPaxMtjFvp4=\");\n_c = Calender;\nvar _c;\n$RefreshReg$(_c, \"Calender\");","map":{"version":3,"names":["React","useCallback","useState","useEffect","useRef","FullCalendar","dayGridPlugin","allLocales","interactionPlugin","axios","jsxDEV","_jsxDEV","Calender","GetTimeList","_s","d","Date","events","setEvents","startDate","getFullYear","getMonth","endDate","GetEvent","URL","current","response","post","event_date","i","data","length","push","title","date","error","status","console","log","HandleDateClick","arg","selectDate","dateStr","events_date","map","item","includes","HandleDatesClick","tempStartDate","start","tempEndDate","end","getDate","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","plugins","initialView","locales","locale","dateClick","datesSet","contentHeight","_c","$RefreshReg$"],"sources":["/Users/nobuoezaki/Desktop/ezaki-lab/2023moba/src/Calender.js"],"sourcesContent":["// 参考 https://qiita.com/FumioNonaka/items/1810f7e211638988af62\nimport React, {useCallback, useState, useEffect, useRef} from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\"; // pluginは、あとから\nimport allLocales from '@fullcalendar/core/locales-all';\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport axios from 'axios';\nimport \"./css/Calender.css\"\n// axios.defaults.baseURL = 'http://localhost:3000';\n// axios.defaults.headers.post['Content-Type'] = 'application/json;charset=utf-8';\n\nexport const Calender = ({GetTimeList}) => {\n  // DOMに現れるものをuseState，表れないものを\n  const d = new Date();\n  const [events, setEvents] = useState([]);\n  const startDate = useRef(`${d.getFullYear()}-${d.getMonth()+1}-1`);\n  const endDate = useRef(`${d.getFullYear()}-${d.getMonth()+2}-1`);\n\n  const GetEvent = async () => { //非同期関数\n    // APIからデータを取得\n    const URL = `https://ezaki-lab.littlestar.jp/nict/api/get_date.php?start_date=${startDate.current}&end_date=${endDate.current}`;\n    \n    try {\n      const response = await axios.post(URL);\n      let event_date = [];\n      for(let i = 0; i < response.data.length; i++) {\n        event_date.push({title : \"\", date : `${response.data[i]['date']}`});\n      }\n      // events.current = event_date;\n      // console.log(events.current);\n      setEvents(event_date);\n    }\n    catch(error) {\n      // console.error(error);\n      switch (error.response.status) {\n        case 400:\n          console.log('認証エラーです');\n          break;\n        case 401:\n          console.log('認証エラーです');\n          break;\n        case 404:\n          console.log('URL先がないです');\n          break;\n        default:\n          console.log(error);\n      }\n    };\n  }\n\n  // 日付をクリックした時\n  const HandleDateClick = useCallback((arg) => {\n    const selectDate = arg.dateStr;\n    const events_date = events.current.map((item) => {\n      return item.date;\n    });\n    if(events_date.includes(selectDate)) {\n      GetTimeList(arg.dateStr);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // 前後の月に移動した時 https://zenn.dev/takky94/articles/7d10cfc95c77de\n  const HandleDatesClick = (arg) => {\n    const tempStartDate = arg.start;\n    const tempEndDate = arg.end;\n\n    // setStartDate(`${tempStartDate.getFullYear()}-${tempStartDate.getMonth()+1}-${tempStartDate.getDate()}`);\n    // setEndDate(`${tempEndDate.getFullYear()}-${tempEndDate.getMonth()+1}-${tempEndDate.getDate()}`);\n    startDate.current = `${tempStartDate.getFullYear()}-${tempStartDate.getMonth()+1}-${tempStartDate.getDate()}`;\n    endDate.current = `${tempEndDate.getFullYear()}-${tempEndDate.getMonth()+1}-${tempEndDate.getDate()}`;\n    GetEvent();\n  }\n\n  // 第2因数の値に変化があったときに実行\n  useEffect(() => {\n    GetEvent();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return(\n    <div id=\"date_div\" className=\"calendar_container\">\n      <h1>日付選択</h1>\n      <FullCalendar \n        plugins={[dayGridPlugin, interactionPlugin]} \n        initialView=\"dayGridMonth\" //表示の種類\n        locales={allLocales} //全部を日本語化\n        locale=\"ja\" //日本語表記\n        // イベントを表示 forで配列作って入れ込む?\n        events={events}\n        dateClick={HandleDateClick}\n        datesSet={HandleDatesClick}\n        contentHeight=\"auto\" // 高さを自動調整\n      />\n    </div>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
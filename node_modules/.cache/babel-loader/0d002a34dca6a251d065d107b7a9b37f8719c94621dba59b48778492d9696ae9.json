{"ast":null,"code":"var _jsxFileName = \"/Users/nobuoezaki/Desktop/ezaki-lab/my-app/src/DateView.js\",\n  _s = $RefreshSig$();\n// 参考 https://qiita.com/FumioNonaka/items/1810f7e211638988af62\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\"; // pluginは、あとから\nimport allLocales from '@fullcalendar/core/locales-all';\nimport interactionPlugin, { DateClickArg } from \"@fullcalendar/interaction\";\nimport axios from 'axios';\n// axios.defaults.baseURL = 'http://localhost:3000';\n// axios.defaults.headers.post['Content-Type'] = 'application/json;charset=utf-8';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DateView = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n\n  // 日付をクリックした時\n  const HandleDateClick = useCallback(arg => {\n    alert(arg.dateStr);\n  }, []);\n\n  // 前後の月に移動した時 https://zenn.dev/takky94/articles/7d10cfc95c77de\n  const HandleDatesClick = arg => {\n    const tempStartDate = arg.start;\n    const tempEndDate = arg.end;\n    // console.log(tempStartDate.getFullYear());\n\n    setStartDate(`${tempStartDate.getFullYear()}-${tempStartDate.getMonth() + 1}-${tempStartDate.getDate()}`);\n    setEndDate(`${tempEndDate.getFullYear()}-${tempEndDate.getMonth() + 1}-${tempEndDate.getDate()}`);\n  };\n  const SetEvent = () => {};\n  useEffect(() => {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"date_div\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u65E5\\u4ED8\\u9078\\u629E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, interactionPlugin],\n      initialView: \"dayGridMonth\" //表示の種類\n      ,\n      locales: allLocales //全部を日本語化\n      ,\n      locale: \"ja\" //日本語表記\n      // イベントを表示 forで配列作って入れ込む?\n      ,\n      events: event_date,\n      dateClick: HandleDateClick,\n      datesSet: HandleDatesClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(DateView, \"TpUQ+NnzXqIjp8xAhyL7Qkp9j7g=\");\n_c = DateView;\nvar _c;\n$RefreshReg$(_c, \"DateView\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","FullCalendar","dayGridPlugin","allLocales","interactionPlugin","DateClickArg","axios","jsxDEV","_jsxDEV","DateView","_s","posts","setPosts","startDate","setStartDate","endDate","setEndDate","HandleDateClick","arg","alert","dateStr","HandleDatesClick","tempStartDate","start","tempEndDate","end","getFullYear","getMonth","getDate","SetEvent","id","children","fileName","_jsxFileName","lineNumber","columnNumber","plugins","initialView","locales","locale","events","event_date","dateClick","datesSet","_c","$RefreshReg$"],"sources":["/Users/nobuoezaki/Desktop/ezaki-lab/my-app/src/DateView.js"],"sourcesContent":["// 参考 https://qiita.com/FumioNonaka/items/1810f7e211638988af62\nimport React, {useCallback, useEffect, useState} from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\"; // pluginは、あとから\nimport allLocales from '@fullcalendar/core/locales-all';\nimport interactionPlugin, { DateClickArg } from \"@fullcalendar/interaction\";\nimport axios from 'axios';\n// axios.defaults.baseURL = 'http://localhost:3000';\n// axios.defaults.headers.post['Content-Type'] = 'application/json;charset=utf-8';\n\nexport const DateView = () => {\n  const [posts, setPosts] = useState([]);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n\n  // 日付をクリックした時\n  const HandleDateClick = useCallback((arg) => {\n    alert(arg.dateStr);\n  }, []);\n\n  // 前後の月に移動した時 https://zenn.dev/takky94/articles/7d10cfc95c77de\n  const HandleDatesClick = (arg) => {\n    const tempStartDate = arg.start;\n    const tempEndDate = arg.end;\n    // console.log(tempStartDate.getFullYear());\n\n    setStartDate(`${tempStartDate.getFullYear()}-${tempStartDate.getMonth()+1}-${tempStartDate.getDate()}`);\n    setEndDate(`${tempEndDate.getFullYear()}-${tempEndDate.getMonth()+1}-${tempEndDate.getDate()}`);\n  }\n\n  const SetEvent = () => {\n\n  }\n\n  useEffect(() => {\n\n  })\n  \n\n  return(\n    <div id=\"date_div\">\n      <h1>日付選択</h1>\n      <FullCalendar \n        plugins={[dayGridPlugin, interactionPlugin]} \n        initialView=\"dayGridMonth\" //表示の種類\n        locales={allLocales} //全部を日本語化\n        locale=\"ja\" //日本語表記\n        // イベントを表示 forで配列作って入れ込む?\n        events={event_date}\n        dateClick={HandleDateClick}\n        datesSet={HandleDatesClick}\n      />\n    </div>\n  )\n}"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAGC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAC7D,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,uBAAuB,CAAC,CAAC;AACnD,OAAOC,UAAU,MAAM,gCAAgC;AACvD,OAAOC,iBAAiB,IAAIC,YAAY,QAAQ,2BAA2B;AAC3E,OAAOC,KAAK,MAAM,OAAO;AACzB;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA,MAAMiB,eAAe,GAAGnB,WAAW,CAAEoB,GAAG,IAAK;IAC3CC,KAAK,CAACD,GAAG,CAACE,OAAO,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,gBAAgB,GAAIH,GAAG,IAAK;IAChC,MAAMI,aAAa,GAAGJ,GAAG,CAACK,KAAK;IAC/B,MAAMC,WAAW,GAAGN,GAAG,CAACO,GAAG;IAC3B;;IAEAX,YAAY,CAAE,GAAEQ,aAAa,CAACI,WAAW,CAAC,CAAE,IAAGJ,aAAa,CAACK,QAAQ,CAAC,CAAC,GAAC,CAAE,IAAGL,aAAa,CAACM,OAAO,CAAC,CAAE,EAAC,CAAC;IACvGZ,UAAU,CAAE,GAAEQ,WAAW,CAACE,WAAW,CAAC,CAAE,IAAGF,WAAW,CAACG,QAAQ,CAAC,CAAC,GAAC,CAAE,IAAGH,WAAW,CAACI,OAAO,CAAC,CAAE,EAAC,CAAC;EACjG,CAAC;EAED,MAAMC,QAAQ,GAAGA,CAAA,KAAM,CAEvB,CAAC;EAED9B,SAAS,CAAC,MAAM,CAEhB,CAAC,CAAC;EAGF,oBACES,OAAA;IAAKsB,EAAE,EAAC,UAAU;IAAAC,QAAA,gBAChBvB,OAAA;MAAAuB,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACb3B,OAAA,CAACP,YAAY;MACXmC,OAAO,EAAE,CAAClC,aAAa,EAAEE,iBAAiB,CAAE;MAC5CiC,WAAW,EAAC,cAAc,CAAC;MAAA;MAC3BC,OAAO,EAAEnC,UAAW,CAAC;MAAA;MACrBoC,MAAM,EAAC,IAAI,CAAC;MACZ;MAAA;MACAC,MAAM,EAAEC,UAAW;MACnBC,SAAS,EAAEzB,eAAgB;MAC3B0B,QAAQ,EAAEtB;IAAiB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAAzB,EAAA,CA5CYD,QAAQ;AAAAmC,EAAA,GAARnC,QAAQ;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
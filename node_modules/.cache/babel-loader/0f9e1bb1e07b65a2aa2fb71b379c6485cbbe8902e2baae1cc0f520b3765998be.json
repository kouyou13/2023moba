{"ast":null,"code":"var _jsxFileName = \"/Users/nobuoezaki/Desktop/ezaki-lab/my-app/src/DateView.js\",\n  _s = $RefreshSig$();\n// 参考 https://qiita.com/FumioNonaka/items/1810f7e211638988af62\nimport React, { useCallback, useState } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\"; // pluginは、あとから\nimport allLocales from '@fullcalendar/core/locales-all';\nimport interactionPlugin, { DateClickArg } from \"@fullcalendar/interaction\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = 'http://localhost:3000';\naxios.defaults.headers.post['Content-Type'] = 'application/json;charset=utf-8';\nexport const DateView = () => {\n  _s();\n  // 日付をクリックした時\n  const handleDateClick = useCallback(arg => {\n    alert(arg.dateStr);\n  }, []);\n  const [posts, setPosts] = useState([]);\n\n  // APIからデータを取得\n  const DateURL = \"https://ezaki-lab.littlestar.jp/nict/api/get_date.php?year=2023&month=9\";\n  // const data = new URLSearchParams();\n  // data.append('year', '2023'); // 任意の年\n  // data.append('month', '9');   // 任意の月\n\n  axios.post(DateURL).then(function (response) {\n    // console.log(response.data);\n    setPosts(response.data);\n  }).catch(function (error) {\n    // console.log(error);\n    switch (error.response.status) {\n      case 400:\n      case 401:\n        console.log('認証エラーです');\n      case 404:\n        console.log('URL先がないです');\n      default:\n    }\n  });\n  let event_date = [];\n  for (let i = 0; i < posts.length; i++) {\n    event_date.push({\n      title: \"データあり\",\n      date: `${posts[i]['date']}`\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"date_div\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u65E5\\u4ED8\\u9078\\u629E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, interactionPlugin],\n      initialView: \"dayGridMonth\" //表示の種類\n      ,\n      locales: allLocales //全部を日本語化\n      ,\n      locale: \"ja\" //日本語表記\n      // イベントを表示 forで配列作って入れ込む?\n      ,\n      events: event_date,\n      dateClick: handleDateClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(DateView, \"reDDZPAc0+f077/8Iu2s6htp2SQ=\");\n_c = DateView;\nvar _c;\n$RefreshReg$(_c, \"DateView\");","map":{"version":3,"names":["React","useCallback","useState","FullCalendar","dayGridPlugin","allLocales","interactionPlugin","DateClickArg","axios","jsxDEV","_jsxDEV","defaults","baseURL","headers","post","DateView","_s","handleDateClick","arg","alert","dateStr","posts","setPosts","DateURL","then","response","data","catch","error","status","console","log","event_date","i","length","push","title","date","id","children","fileName","_jsxFileName","lineNumber","columnNumber","plugins","initialView","locales","locale","events","dateClick","_c","$RefreshReg$"],"sources":["/Users/nobuoezaki/Desktop/ezaki-lab/my-app/src/DateView.js"],"sourcesContent":["// 参考 https://qiita.com/FumioNonaka/items/1810f7e211638988af62\nimport React, {useCallback, useState} from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\"; // pluginは、あとから\nimport allLocales from '@fullcalendar/core/locales-all';\nimport interactionPlugin, { DateClickArg } from \"@fullcalendar/interaction\";\nimport axios from 'axios';\naxios.defaults.baseURL = 'http://localhost:3000';\naxios.defaults.headers.post['Content-Type'] = 'application/json;charset=utf-8';\n\nexport const DateView = () => {\n  // 日付をクリックした時\n  const handleDateClick = useCallback((arg) => {\n    alert(arg.dateStr);\n  }, []);\n\n  const [posts, setPosts] = useState([]);\n\n  // APIからデータを取得\n  const DateURL = \"https://ezaki-lab.littlestar.jp/nict/api/get_date.php?year=2023&month=9\";\n  // const data = new URLSearchParams();\n  // data.append('year', '2023'); // 任意の年\n  // data.append('month', '9');   // 任意の月\n\n  axios.post(DateURL)\n  .then(function (response) {\n    // console.log(response.data);\n    setPosts(response.data);\n  })\n  .catch(function (error) {\n    // console.log(error);\n    switch (error.response.status) {\n      case 400:\n      case 401:\n        console.log('認証エラーです');\n      case 404:\n        console.log('URL先がないです');\n      default:\n    }\n  });\n\n  let event_date = [];\n  for(let i = 0; i < posts.length; i++) {\n    event_date.push({title : \"データあり\", date : `${posts[i]['date']}`});\n  }\n  \n\n  return(\n    <div id=\"date_div\">\n      <h1>日付選択</h1>\n      <FullCalendar \n        plugins={[dayGridPlugin, interactionPlugin]} \n        initialView=\"dayGridMonth\" //表示の種類\n        locales={allLocales} //全部を日本語化\n        locale=\"ja\" //日本語表記\n        // イベントを表示 forで配列作って入れ込む?\n        events={event_date}\n        dateClick={handleDateClick}\n      />\n    </div>\n  )\n}"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAGC,WAAW,EAAEC,QAAQ,QAAO,OAAO;AAClD,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,uBAAuB,CAAC,CAAC;AACnD,OAAOC,UAAU,MAAM,gCAAgC;AACvD,OAAOC,iBAAiB,IAAIC,YAAY,QAAQ,2BAA2B;AAC3E,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1BF,KAAK,CAACG,QAAQ,CAACC,OAAO,GAAG,uBAAuB;AAChDJ,KAAK,CAACG,QAAQ,CAACE,OAAO,CAACC,IAAI,CAAC,cAAc,CAAC,GAAG,gCAAgC;AAE9E,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B;EACA,MAAMC,eAAe,GAAGhB,WAAW,CAAEiB,GAAG,IAAK;IAC3CC,KAAK,CAACD,GAAG,CAACE,OAAO,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMqB,OAAO,GAAG,yEAAyE;EACzF;EACA;EACA;;EAEAf,KAAK,CAACM,IAAI,CAACS,OAAO,CAAC,CAClBC,IAAI,CAAC,UAAUC,QAAQ,EAAE;IACxB;IACAH,QAAQ,CAACG,QAAQ,CAACC,IAAI,CAAC;EACzB,CAAC,CAAC,CACDC,KAAK,CAAC,UAAUC,KAAK,EAAE;IACtB;IACA,QAAQA,KAAK,CAACH,QAAQ,CAACI,MAAM;MAC3B,KAAK,GAAG;MACR,KAAK,GAAG;QACNC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;MACxB,KAAK,GAAG;QACND,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;MAC1B;IACF;EACF,CAAC,CAAC;EAEF,IAAIC,UAAU,GAAG,EAAE;EACnB,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGZ,KAAK,CAACa,MAAM,EAAED,CAAC,EAAE,EAAE;IACpCD,UAAU,CAACG,IAAI,CAAC;MAACC,KAAK,EAAG,OAAO;MAAEC,IAAI,EAAI,GAAEhB,KAAK,CAACY,CAAC,CAAC,CAAC,MAAM,CAAE;IAAC,CAAC,CAAC;EAClE;EAGA,oBACEvB,OAAA;IAAK4B,EAAE,EAAC,UAAU;IAAAC,QAAA,gBAChB7B,OAAA;MAAA6B,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACbjC,OAAA,CAACP,YAAY;MACXyC,OAAO,EAAE,CAACxC,aAAa,EAAEE,iBAAiB,CAAE;MAC5CuC,WAAW,EAAC,cAAc,CAAC;MAAA;MAC3BC,OAAO,EAAEzC,UAAW,CAAC;MAAA;MACrB0C,MAAM,EAAC,IAAI,CAAC;MACZ;MAAA;MACAC,MAAM,EAAEhB,UAAW;MACnBiB,SAAS,EAAEhC;IAAgB;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAA3B,EAAA,CAnDYD,QAAQ;AAAAmC,EAAA,GAARnC,QAAQ;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
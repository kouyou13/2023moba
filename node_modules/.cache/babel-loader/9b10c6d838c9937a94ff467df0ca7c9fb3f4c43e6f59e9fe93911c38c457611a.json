{"ast":null,"code":"var _jsxFileName = \"/Users/nobuoezaki/Desktop/ezaki-lab/my-app/src/DateView.js\",\n  _s = $RefreshSig$();\n// 参考 https://qiita.com/FumioNonaka/items/1810f7e211638988af62\nimport React, { useCallback, useState } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\"; // pluginは、あとから\nimport allLocales from '@fullcalendar/core/locales-all';\nimport interactionPlugin, { DateClickArg } from \"@fullcalendar/interaction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst thisMonth = () => {\n  const today = new Date();\n  return `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, \"0\")}`;\n};\nexport const DateView = () => {\n  _s();\n  // 日付をクリックした時\n  const handleDateClick = useCallback(arg => {\n    alert(arg.dateStr);\n  }, []);\n  const [posts, setPosts] = useState({});\n  fetch('', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name: 'Hubot',\n      login: 'hubot'\n    })\n  }).then(function (response) {\n    // setPosts(response);\n    // レスポンス結果\n  }, function (error) {\n    // エラー内容\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"date_div\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u65E5\\u4ED8\\u9078\\u629E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, interactionPlugin],\n      initialView: \"dayGridMonth\" //表示の種類\n      ,\n      locales: allLocales //全部を日本語化\n      ,\n      locale: \"ja\" //日本語表記\n      // イベントを表示 forで配列作って入れ込む?\n      ,\n      events: [{\n        title: \"event 1\",\n        date: `${thisMonth()}-01`\n      }, {\n        title: \"event 2\",\n        date: `${thisMonth()}-02`\n      }],\n      dateClick: handleDateClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(DateView, \"sVam+T04JwEuFv3kAR47QpzxX60=\");\n_c = DateView;\nvar _c;\n$RefreshReg$(_c, \"DateView\");","map":{"version":3,"names":["React","useCallback","useState","FullCalendar","dayGridPlugin","allLocales","interactionPlugin","DateClickArg","jsxDEV","_jsxDEV","thisMonth","today","Date","getFullYear","String","getMonth","padStart","DateView","_s","handleDateClick","arg","alert","dateStr","posts","setPosts","fetch","method","headers","body","JSON","stringify","name","login","then","response","error","id","children","fileName","_jsxFileName","lineNumber","columnNumber","plugins","initialView","locales","locale","events","title","date","dateClick","_c","$RefreshReg$"],"sources":["/Users/nobuoezaki/Desktop/ezaki-lab/my-app/src/DateView.js"],"sourcesContent":["// 参考 https://qiita.com/FumioNonaka/items/1810f7e211638988af62\nimport React, {useCallback, useState} from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\"; // pluginは、あとから\nimport allLocales from '@fullcalendar/core/locales-all';\nimport interactionPlugin, { DateClickArg } from \"@fullcalendar/interaction\";\n\nconst thisMonth = () => {\n  const today = new Date();\n  return `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(\n    2,\n    \"0\"\n  )}`;\n};\n\nexport const DateView = () => {\n  // 日付をクリックした時\n  const handleDateClick = useCallback((arg) => {\n    alert(arg.dateStr);\n  }, []);\n\n  const [posts, setPosts] = useState({});\n\n  fetch('', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name: 'Hubot',\n      login: 'hubot',\n    })\n  }).then(function(response) {\n    // setPosts(response);\n    // レスポンス結果\n  }, function(error) {\n    // エラー内容\n  });\n\n  return(\n    <div id=\"date_div\">\n      <h1>日付選択</h1>\n      <FullCalendar \n        plugins={[dayGridPlugin, interactionPlugin]} \n        initialView=\"dayGridMonth\" //表示の種類\n        locales={allLocales} //全部を日本語化\n        locale=\"ja\" //日本語表記\n        // イベントを表示 forで配列作って入れ込む?\n        events={[\n          { title: \"event 1\", date: `${thisMonth()}-01` },\n          { title: \"event 2\", date: `${thisMonth()}-02` },\n        ]}\n        dateClick={handleDateClick}\n      />\n    </div>\n  )\n}"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAGC,WAAW,EAAEC,QAAQ,QAAO,OAAO;AAClD,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,uBAAuB,CAAC,CAAC;AACnD,OAAOC,UAAU,MAAM,gCAAgC;AACvD,OAAOC,iBAAiB,IAAIC,YAAY,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5E,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACtB,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;EACxB,OAAQ,GAAED,KAAK,CAACE,WAAW,CAAC,CAAE,IAAGC,MAAM,CAACH,KAAK,CAACI,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAACC,QAAQ,CACpE,CAAC,EACD,GACF,CAAE,EAAC;AACL,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B;EACA,MAAMC,eAAe,GAAGlB,WAAW,CAAEmB,GAAG,IAAK;IAC3CC,KAAK,CAACD,GAAG,CAACE,OAAO,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEtCuB,KAAK,CAAC,EAAE,EAAE;IACRC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBC,IAAI,EAAE,OAAO;MACbC,KAAK,EAAE;IACT,CAAC;EACH,CAAC,CAAC,CAACC,IAAI,CAAC,UAASC,QAAQ,EAAE;IACzB;IACA;EAAA,CACD,EAAE,UAASC,KAAK,EAAE;IACjB;EAAA,CACD,CAAC;EAEF,oBACE1B,OAAA;IAAK2B,EAAE,EAAC,UAAU;IAAAC,QAAA,gBAChB5B,OAAA;MAAA4B,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACbhC,OAAA,CAACN,YAAY;MACXuC,OAAO,EAAE,CAACtC,aAAa,EAAEE,iBAAiB,CAAE;MAC5CqC,WAAW,EAAC,cAAc,CAAC;MAAA;MAC3BC,OAAO,EAAEvC,UAAW,CAAC;MAAA;MACrBwC,MAAM,EAAC,IAAI,CAAC;MACZ;MAAA;MACAC,MAAM,EAAE,CACN;QAAEC,KAAK,EAAE,SAAS;QAAEC,IAAI,EAAG,GAAEtC,SAAS,CAAC,CAAE;MAAK,CAAC,EAC/C;QAAEqC,KAAK,EAAE,SAAS;QAAEC,IAAI,EAAG,GAAEtC,SAAS,CAAC,CAAE;MAAK,CAAC,CAC/C;MACFuC,SAAS,EAAE9B;IAAgB;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAAvB,EAAA,CAzCYD,QAAQ;AAAAiC,EAAA,GAARjC,QAAQ;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
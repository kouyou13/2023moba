{"ast":null,"code":"var _jsxFileName = \"/Users/nobuoezaki/Desktop/ezaki-lab/2023moba/src/Calender.js\",\n  _s = $RefreshSig$();\n// 参考 https://qiita.com/FumioNonaka/items/1810f7e211638988af62\nimport React, { useCallback, useRef, useState } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\"; // pluginは、あとから\nimport allLocales from '@fullcalendar/core/locales-all';\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport \"./css/Calender.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Calender = ({\n  GetTimeList,\n  AccessApi,\n  setTimeDates,\n  setPositions,\n  setSelectedTime\n}) => {\n  _s();\n  // const events = useRef([]);\n  const calendarRef = useRef(null);\n  const [dates, setDates] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const d = new Date();\n  const startDate = useRef(`${d.getFullYear()}-${d.getMonth() + 1}-1`);\n  const endDate = useRef(`${d.getFullYear()}-${d.getMonth() + 2}-1`);\n  let event_date = [];\n  const GetEvent = async arg => {\n    const tempStartDate = arg.start;\n    const tempEndDate = arg.end;\n    startDate.current = `${tempStartDate.getFullYear()}-${tempStartDate.getMonth() + 1}-${tempStartDate.getDate()}`;\n    endDate.current = `${tempEndDate.getFullYear()}-${tempEndDate.getMonth() + 1}-${tempEndDate.getDate()}`;\n    const URL = `https://ezaki-lab.littlestar.jp/nict/api/get_date.php?start_date=${startDate.current}&end_date=${endDate.current}`;\n    event_date = [];\n    try {\n      const data = await AccessApi(URL);\n      for (let i = 0; i < data.length; i++) {\n        event_date.push({\n          title: `${data[i]['data_num']}回分`,\n          date: `${data[i]['date']}`\n        });\n      }\n      setDates(event_date);\n    } catch (error) {\n      // エラーハンドリング\n    }\n  };\n\n  // 日付をクリックした時\n  const HandleDateClick = useCallback(arg => {\n    const calendarApi = calendarRef.current.getApi();\n    // 選択した日の要素を取得\n    const selectedDayEl = arg.dayEl;\n    // 前に選択した日の要素があれば、元の色に戻す\n    if (selectedDate) {\n      const previousSelectedDayEl = calendarApi.getDate().dateEl; // 前に選択した日の要素を取得\n      previousSelectedDayEl.style.backgroundColor = ''; // 背景色をクリア\n    }\n    // 選択した日の要素を取得し、スタイルを変更\n    selectedDayEl.style.backgroundColor = '#FFF000'; // 色を赤に変更（任意の色に変更可能）\n\n    setSelectedDate(selectedDayEl);\n    // 選択範囲をクリア\n    calendarApi.unselect();\n\n    // 緯度経度の取得など\n    const events_date = event_date.map(item => {\n      return item.date;\n    });\n    if (events_date.includes(arg.dateStr)) {\n      GetTimeList(arg.dateStr);\n    } else {\n      setTimeDates([]);\n      setPositions([]);\n      setSelectedTime('');\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // 前後の月に移動した時 https://zenn.dev/takky94/articles/7d10cfc95c77de\n  const HandleDatesClick = arg => {\n    GetEvent(arg);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n      ref: calendarRef,\n      plugins: [dayGridPlugin, interactionPlugin],\n      initialView: \"dayGridMonth\" //表示の種類\n      ,\n      locales: allLocales //全部を日本語化\n      ,\n      locale: \"ja\" //日本語表記\n      // イベントを表示 forで配列作って入れ込む?\n      ,\n      events: dates,\n      dateClick: HandleDateClick,\n      datesSet: HandleDatesClick,\n      contentHeight: \"auto\" // 高さを自動調整\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(Calender, \"vxNF1lTBX1P6FNzK0BOdbdp4Xhg=\");\n_c = Calender;\nvar _c;\n$RefreshReg$(_c, \"Calender\");","map":{"version":3,"names":["React","useCallback","useRef","useState","FullCalendar","dayGridPlugin","allLocales","interactionPlugin","jsxDEV","_jsxDEV","Calender","GetTimeList","AccessApi","setTimeDates","setPositions","setSelectedTime","_s","calendarRef","dates","setDates","selectedDate","setSelectedDate","d","Date","startDate","getFullYear","getMonth","endDate","event_date","GetEvent","arg","tempStartDate","start","tempEndDate","end","current","getDate","URL","data","i","length","push","title","date","error","HandleDateClick","calendarApi","getApi","selectedDayEl","dayEl","previousSelectedDayEl","dateEl","style","backgroundColor","unselect","events_date","map","item","includes","dateStr","HandleDatesClick","children","ref","plugins","initialView","locales","locale","events","dateClick","datesSet","contentHeight","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nobuoezaki/Desktop/ezaki-lab/2023moba/src/Calender.js"],"sourcesContent":["// 参考 https://qiita.com/FumioNonaka/items/1810f7e211638988af62\nimport React, {useCallback, useRef, useState} from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\"; // pluginは、あとから\nimport allLocales from '@fullcalendar/core/locales-all';\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport \"./css/Calender.css\"\n\nexport const Calender = ({GetTimeList, AccessApi, setTimeDates, setPositions, setSelectedTime}) => {\n  // const events = useRef([]);\n  const calendarRef = useRef(null);\n  const [dates, setDates] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const d = new Date();\n  const startDate = useRef(`${d.getFullYear()}-${d.getMonth()+1}-1`);\n  const endDate = useRef(`${d.getFullYear()}-${d.getMonth()+2}-1`);\n  let event_date = [];\n\n  const GetEvent = async (arg) => {\n    const tempStartDate = arg.start;\n    const tempEndDate = arg.end;\n\n    startDate.current = `${tempStartDate.getFullYear()}-${tempStartDate.getMonth() + 1}-${tempStartDate.getDate()}`;\n    endDate.current = `${tempEndDate.getFullYear()}-${tempEndDate.getMonth() + 1}-${tempEndDate.getDate()}`;\n\n    const URL = `https://ezaki-lab.littlestar.jp/nict/api/get_date.php?start_date=${startDate.current}&end_date=${endDate.current}`;\n\n    event_date = [];\n    try {\n      const data = await AccessApi(URL);\n      for (let i = 0; i < data.length; i++) {\n        event_date.push({ title: `${data[i]['data_num']}回分`, date: `${data[i]['date']}` });\n      }\n      setDates(event_date);\n    } catch (error) {\n      // エラーハンドリング\n    }\n  };\n\n  // 日付をクリックした時\n  const HandleDateClick = useCallback((arg) => {\n    const calendarApi = calendarRef.current.getApi();\n    // 選択した日の要素を取得\n    const selectedDayEl = arg.dayEl;\n    // 前に選択した日の要素があれば、元の色に戻す\n    if (selectedDate) {\n      const previousSelectedDayEl = calendarApi.getDate().dateEl; // 前に選択した日の要素を取得\n      previousSelectedDayEl.style.backgroundColor = ''; // 背景色をクリア\n    }\n    // 選択した日の要素を取得し、スタイルを変更\n    selectedDayEl.style.backgroundColor = '#FFF000'; // 色を赤に変更（任意の色に変更可能）\n\n    setSelectedDate(selectedDayEl);\n    // 選択範囲をクリア\n    calendarApi.unselect();\n\n    // 緯度経度の取得など\n    const events_date = event_date.map((item) => {\n      return item.date;\n    });\n    if (events_date.includes(arg.dateStr)) {\n      GetTimeList(arg.dateStr);\n    } else {\n      setTimeDates([]);\n      setPositions([]);\n      setSelectedTime('');\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n\n  // 前後の月に移動した時 https://zenn.dev/takky94/articles/7d10cfc95c77de\n  const HandleDatesClick = (arg) => {\n    GetEvent(arg);\n  }\n\n  return(\n    <div>\n      <FullCalendar \n        ref={calendarRef}\n        plugins={[dayGridPlugin, interactionPlugin]} \n        initialView=\"dayGridMonth\" //表示の種類\n        locales={allLocales} //全部を日本語化\n        locale=\"ja\" //日本語表記\n        // イベントを表示 forで配列作って入れ込む?\n        events={dates}\n        dateClick={HandleDateClick}\n        datesSet={HandleDatesClick}\n        contentHeight=\"auto\" // 高さを自動調整\n      />\n    </div>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
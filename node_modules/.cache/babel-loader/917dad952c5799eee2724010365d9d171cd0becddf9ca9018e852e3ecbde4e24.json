{"ast":null,"code":"var _jsxFileName = \"/Users/nobuoezaki/Desktop/ezaki-lab/2023moba/src/Calender.js\",\n  _s = $RefreshSig$();\n// 参考 https://qiita.com/FumioNonaka/items/1810f7e211638988af62\nimport React, { useCallback, useRef, useState } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\"; // pluginは、あとから\nimport allLocales from '@fullcalendar/core/locales-all';\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport axios from 'axios';\nimport \"./css/Calender.css\";\n// axios.defaults.baseURL = 'http://localhost:3000';\n// axios.defaults.headers.post['Content-Type'] = 'application/json;charset=utf-8';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Calender = ({\n  GetTimeList,\n  setTimeDates\n}) => {\n  _s();\n  // const events = useRef([]);\n  const calendarRef = useRef(null);\n  const [dates, setDates] = useState([]);\n  const d = new Date();\n  const startDate = useRef(`${d.getFullYear()}-${d.getMonth() + 1}-1`);\n  const endDate = useRef(`${d.getFullYear()}-${d.getMonth() + 2}-1`);\n  let event_date = [];\n  const fetchDataFromAPI = async URL => {\n    try {\n      const response = await axios.post(URL);\n      return response.data;\n    } catch (error) {\n      console.log(URL);\n      switch (error.response.status) {\n        case 400:\n          console.log('認証エラーです');\n          break;\n        case 401:\n          console.log('認証エラーです');\n          break;\n        case 404:\n          console.log('URL先がないです');\n          break;\n        default:\n          console.log(error);\n      }\n      throw error;\n    }\n  };\n  const GetEvent = async arg => {\n    const tempStartDate = arg.start;\n    const tempEndDate = arg.end;\n    startDate.current = `${tempStartDate.getFullYear()}-${tempStartDate.getMonth() + 1}-${tempStartDate.getDate()}`;\n    endDate.current = `${tempEndDate.getFullYear()}-${tempEndDate.getMonth() + 1}-${tempEndDate.getDate()}`;\n    const URL = `https://ezaki-lab.littlestar.jp/nict/api/get_date.php?start_date=${startDate.current}&end_date=${endDate.current}`;\n    try {\n      const data = await fetchDataFromAPI(URL);\n      for (let i = 0; i < data.length; i++) {\n        event_date.push({\n          title: \"\",\n          date: `${data[i]['date']}`\n        });\n      }\n      setDates(event_date);\n    } catch (error) {\n      // エラーハンドリング\n    }\n  };\n\n  // 日付をクリックした時\n  const HandleDateClick = useCallback(arg => {\n    const selectDate = arg.dateStr;\n    const events_date = event_date.map(item => {\n      return item.date;\n    });\n    if (events_date.includes(selectDate)) {\n      GetTimeList(arg.dateStr);\n    } else {\n      setTimeDates([]);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // 前後の月に移動した時 https://zenn.dev/takky94/articles/7d10cfc95c77de\n  const HandleDatesClick = arg => {\n    GetEvent(arg);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n      ref: calendarRef,\n      plugins: [dayGridPlugin, interactionPlugin],\n      initialView: \"dayGridMonth\" //表示の種類\n      ,\n      locales: allLocales //全部を日本語化\n      ,\n      locale: \"ja\" //日本語表記\n      // イベントを表示 forで配列作って入れ込む?\n      ,\n      events: dates,\n      dateClick: HandleDateClick,\n      datesSet: HandleDatesClick,\n      contentHeight: \"auto\" // 高さを自動調整\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(Calender, \"zpl8UDVUp9xabaqXafy1n6QMF80=\");\n_c = Calender;\nvar _c;\n$RefreshReg$(_c, \"Calender\");","map":{"version":3,"names":["React","useCallback","useRef","useState","FullCalendar","dayGridPlugin","allLocales","interactionPlugin","axios","jsxDEV","_jsxDEV","Calender","GetTimeList","setTimeDates","_s","calendarRef","dates","setDates","d","Date","startDate","getFullYear","getMonth","endDate","event_date","fetchDataFromAPI","URL","response","post","data","error","console","log","status","GetEvent","arg","tempStartDate","start","tempEndDate","end","current","getDate","i","length","push","title","date","HandleDateClick","selectDate","dateStr","events_date","map","item","includes","HandleDatesClick","children","ref","plugins","initialView","locales","locale","events","dateClick","datesSet","contentHeight","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nobuoezaki/Desktop/ezaki-lab/2023moba/src/Calender.js"],"sourcesContent":["// 参考 https://qiita.com/FumioNonaka/items/1810f7e211638988af62\nimport React, {useCallback, useRef, useState} from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\"; // pluginは、あとから\nimport allLocales from '@fullcalendar/core/locales-all';\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport axios from 'axios';\nimport \"./css/Calender.css\"\n// axios.defaults.baseURL = 'http://localhost:3000';\n// axios.defaults.headers.post['Content-Type'] = 'application/json;charset=utf-8';\n\nexport const Calender = ({GetTimeList, setTimeDates}) => {\n  // const events = useRef([]);\n  const calendarRef = useRef(null);\n  const [dates, setDates] = useState([]);\n  const d = new Date();\n  const startDate = useRef(`${d.getFullYear()}-${d.getMonth()+1}-1`);\n  const endDate = useRef(`${d.getFullYear()}-${d.getMonth()+2}-1`);\n  let event_date = [];\n\n  const fetchDataFromAPI = async (URL) => {\n    try {\n      const response = await axios.post(URL);\n      return response.data;\n    } catch (error) {\n      console.log(URL);\n      switch (error.response.status) {\n        case 400:\n          console.log('認証エラーです');\n          break;\n        case 401:\n          console.log('認証エラーです');\n          break;\n        case 404:\n          console.log('URL先がないです');\n          break;\n        default:\n          console.log(error);\n      }\n      throw error;\n    }\n  };\n\n  const GetEvent = async (arg) => {\n    const tempStartDate = arg.start;\n    const tempEndDate = arg.end;\n\n    startDate.current = `${tempStartDate.getFullYear()}-${tempStartDate.getMonth() + 1}-${tempStartDate.getDate()}`;\n    endDate.current = `${tempEndDate.getFullYear()}-${tempEndDate.getMonth() + 1}-${tempEndDate.getDate()}`;\n\n    const URL = `https://ezaki-lab.littlestar.jp/nict/api/get_date.php?start_date=${startDate.current}&end_date=${endDate.current}`;\n\n    try {\n      const data = await fetchDataFromAPI(URL);\n      for (let i = 0; i < data.length; i++) {\n        event_date.push({ title: \"\", date: `${data[i]['date']}` });\n      }\n      setDates(event_date);\n    } catch (error) {\n      // エラーハンドリング\n    }\n  };\n\n\n  // 日付をクリックした時\n  const HandleDateClick = useCallback((arg) => {\n    const selectDate = arg.dateStr;\n    const events_date = event_date.map((item) => {\n      return item.date;\n    });\n    if(events_date.includes(selectDate)) {\n      GetTimeList(arg.dateStr);\n    }\n    else{\n      setTimeDates([]);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // 前後の月に移動した時 https://zenn.dev/takky94/articles/7d10cfc95c77de\n  const HandleDatesClick = (arg) => {\n    GetEvent(arg);\n  }\n\n  return(\n    <div>\n      <FullCalendar \n        ref={calendarRef}\n        plugins={[dayGridPlugin, interactionPlugin]} \n        initialView=\"dayGridMonth\" //表示の種類\n        locales={allLocales} //全部を日本語化\n        locale=\"ja\" //日本語表記\n        // イベントを表示 forで配列作って入れ込む?\n        events={dates}\n        dateClick={HandleDateClick}\n        datesSet={HandleDatesClick}\n        contentHeight=\"auto\" // 高さを自動調整\n      />\n    </div>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}